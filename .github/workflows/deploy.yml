name: Deploy StockManager Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Tests et validation
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        
      - name: Configuration Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Installation des d√©pendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Lancement des tests
        run: |
          python manage.py test
          
      - name: V√©rification de la collecte des fichiers statiques
        run: |
          python manage.py collectstatic --noinput --settings=stockmanager.settings.production
          
  build:
    needs: test
    runs-on: ubuntu-latest
    name: Build et push de l'image Docker
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        
      - name: Configuration Docker pour registry ins√©curis√©
        run: |
          # Configurer Docker daemon pour accepter le registry ins√©curis√©
          JSON_CONFIG='{
            "insecure-registries": ["${{ secrets.REGISTRY_URL }}"],
            "experimental": true
          }'
          echo "Configuration JSON √† √©crire:"
          echo "$JSON_CONFIG"
          echo "$JSON_CONFIG" | sudo tee /etc/docker/daemon.json
          if [ $? -ne 0 ]; then
            echo "Erreur lors de l'√©criture dans /etc/docker/daemon.json"
            exit 1
          fi
          echo "Contenu de /etc/docker/daemon.json apr√®s √©criture:"
          sudo cat /etc/docker/daemon.json

          # Red√©marrer Docker pour appliquer les changements
          echo "Tentative de red√©marrage de Docker..."
          sudo systemctl restart docker || sudo service docker restart
          RESTART_STATUS=$?
          if [ $RESTART_STATUS -ne 0 ]; then
            echo "::error::Erreur lors du red√©marrage de Docker (Code: $RESTART_STATUS)."
            sudo systemctl status docker --no-pager || sudo service docker status || echo "Impossible d'obtenir le statut du service Docker."
            exit 1
          fi
          echo "Docker red√©marr√© (ou tentative effectu√©e)."

          # V√©rifier l'√©tat du service Docker
          echo "V√©rification de l'√©tat du service Docker..."
          if ! sudo systemctl is-active --quiet docker && ! sudo service docker status | grep -q "is running"; then
             echo "::error::Le service Docker n'est pas actif apr√®s le red√©marrage."
             sudo systemctl status docker --no-pager || sudo service docker status || echo "Impossible d'obtenir le statut du service Docker."
             exit 1
          fi
          echo "Le service Docker est actif."

          # Attendre que Docker soit pr√™t (max 60 secondes)
          echo "Attente de la disponibilit√© du d√©mon Docker..."
          timeout=60
          elapsed=0
          while ! docker info > /dev/null 2>&1; do
            if [ $elapsed -ge $timeout ]; then
              echo "::error::Timeout: Le d√©mon Docker n'est pas devenu disponible apr√®s $timeout secondes."
              echo "--- Statut Docker ---"
              sudo systemctl status docker --no-pager || sudo service docker status || echo "Impossible d'obtenir le statut du service Docker."
              echo "--- Logs Docker ---"
              sudo journalctl -u docker -n 50 --no-pager || echo "Impossible d'obtenir les logs journalctl."
              exit 1
            fi
            sleep 2
            elapsed=$((elapsed + 2))
            echo -n "."
          done
          echo " Le d√©mon Docker est pr√™t."

          # V√©rifier que la configuration est bien prise en compte
          echo "V√©rification de la configuration Docker via 'docker info'..."
          echo "--- D√©but sortie 'docker info' ---"
          DOCKER_INFO_OUTPUT=$(docker info)
          DOCKER_INFO_EXIT_CODE=$?
          echo "$DOCKER_INFO_OUTPUT"
          echo "--- Fin sortie 'docker info' ---"

          if [ $DOCKER_INFO_EXIT_CODE -ne 0 ]; then
            echo "::error::La commande 'docker info' a √©chou√© avec le code $DOCKER_INFO_EXIT_CODE."
            exit 1
          fi

          # Recherche sp√©cifique de l'URL du registry dans la section Insecure Registries
          EXPECTED_REGISTRY="${{ secrets.REGISTRY_URL }}"
          echo "Recherche de '$EXPECTED_REGISTRY' dans les 'Insecure Registries'..."

          if echo "$DOCKER_INFO_OUTPUT" | grep -q -E "(Insecure Registries|Registry Mirrors):(\\n\\s+- ${EXPECTED_REGISTRY}|.*${EXPECTED_REGISTRY})"; then
             echo "Configuration du registry ins√©curis√© '$EXPECTED_REGISTRY' trouv√©e dans 'docker info'."
          else
             echo "::warning::La configuration attendue pour '$EXPECTED_REGISTRY' n'a pas √©t√© trouv√©e explicitement dans la sortie de 'docker info'."
          fi

          echo "Configuration Docker v√©rifi√©e (ou avertissement √©mis)."
          
      - name: Configuration de QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --allow-insecure-entitlement security.insecure
          buildkitd-config-inline: |
            [registry."${{ secrets.REGISTRY_URL }}"]
              http = true
              insecure = true
      
      - name: Login au Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Build et Push de l'image Docker StockManager
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            ${{ secrets.REGISTRY_URL }}/stockmanager:latest
            ${{ secrets.REGISTRY_URL }}/stockmanager:${{ github.sha }}
          allow: security.insecure 
          cache-from: type=registry,ref=${{ secrets.REGISTRY_URL }}/stockmanager:buildcache
          cache-to: type=registry,ref=${{ secrets.REGISTRY_URL }}/stockmanager:buildcache,mode=max
          provenance: false 
          sbom: false

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: D√©ploiement sur le serveur
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
      - name: V√©rifier la pr√©sence de deploy.sh √† la racine du repo
        run: |
          ls -al
          ls -l deploy.sh
          if [ ! -f deploy.sh ]; then
            echo "‚ùå Le fichier deploy.sh n'est pas √† la racine du repo !"
            exit 1
          fi

      - name: Copier le script de d√©ploiement sur le serveur
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: "deploy.sh"
          target: "${{ secrets.DEPLOY_PATH }}/stockmanager/"

      - name: D√©ploiement sur le serveur via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          port: ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            echo "üöÄ D√©but du d√©ploiement de StockManager sur le serveur..."
            cd ${{ secrets.DEPLOY_PATH }}/stockmanager
            if [ ! -f "deploy.sh" ]; then
              echo "‚ùå Erreur: Le script deploy.sh n'existe pas dans ${{ secrets.DEPLOY_PATH }}/stockmanager"
              ls -l
              exit 1
            fi
            chmod +x deploy.sh
            echo "üì¶ Ex√©cution du script de d√©ploiement..."
            ./deploy.sh
            echo "‚úÖ D√©ploiement de StockManager termin√© avec succ√®s!"
