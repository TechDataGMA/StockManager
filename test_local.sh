#!/bin/bash

# Script de test local pour StockManager
# V√©rifie que l'application fonctionne correctement

set -e

echo "üß™ Tests locaux pour StockManager"

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${YELLOW}‚ÑπÔ∏è  $1${NC}"
}

# Test 1: V√©rification des d√©pendances
print_info "V√©rification des d√©pendances Python..."
python -c "
import django
import PIL
import pytest
print(f'Django version: {django.get_version()}')
print('Toutes les d√©pendances sont install√©es')
"
print_success "D√©pendances OK"

# Test 2: Tests Django
print_info "Ex√©cution des tests Django..."
python manage.py test --verbosity=0
print_success "Tests Django pass√©s"

# Test 3: Tests pytest (optionnel)
print_info "Ex√©cution des tests pytest..."
if pytest --collect-only &> /dev/null; then
    pytest -v
    print_success "Tests pytest pass√©s"
else
    print_info "Aucun test pytest trouv√©, test ignor√©"
fi

# Test 4: V√©rification des migrations
print_info "V√©rification des migrations..."
python manage.py makemigrations --check --dry-run
print_success "Migrations √† jour"

# Test 5: Collecte des fichiers statiques
print_info "Test de collecte des fichiers statiques..."
python manage.py collectstatic --noinput --settings=stockmanager.settings.production > /dev/null 2>&1
print_success "Fichiers statiques collect√©s"

# Test 6: V√©rification de la configuration
print_info "V√©rification de la configuration..."
python manage.py check --settings=stockmanager.settings.production
print_success "Configuration valide"

# Test 7: Test Docker build (si Docker est disponible)
if command -v docker &> /dev/null; then
    print_info "Test de build Docker..."
    docker build -t stockmanager-test . > /dev/null 2>&1
    print_success "Image Docker build√©e avec succ√®s"
    
    # Nettoyage
    docker rmi stockmanager-test > /dev/null 2>&1
else
    print_info "Docker non disponible, test de build ignor√©"
fi

# Test 8: V√©rification des traductions ukrainiennes
print_info "V√©rification des traductions ukrainiennes..."
python -c "
from django.conf import settings
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'stockmanager.settings')
import django
django.setup()

# V√©rifier que la langue est bien configur√©e en ukrainien
assert settings.LANGUAGE_CODE == 'uk', f'Langue attendue: uk, trouv√©e: {settings.LANGUAGE_CODE}'
assert settings.TIME_ZONE == 'Europe/Kyiv', f'Timezone attendue: Europe/Kyiv, trouv√©e: {settings.TIME_ZONE}'
print('Configuration ukrainienne OK')
"
print_success "Configuration ukrainienne valide"

echo ""
print_success "üéâ Tous les tests locaux sont pass√©s!"
print_info "L'application est pr√™te pour le d√©ploiement"
